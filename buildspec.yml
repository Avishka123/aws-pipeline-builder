version: 0.2


phases:
  install:
    runtime-versions: {}  # Inherit from environment
    commands:
#      - echo install begin
#      - apt-get update && apt-get install -y curl wget
#      # Choose one installation method (replace <version> with desired version):
#      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -  # Official APT repository
#          # OR
##      - wget https://get.docker.com -O docker.sh  # Download Docker installer script
#      - curl -fsSL https://download.docker.com/linux/ubuntu/$(lsb_release -cs)/docker-<version>.deb -o docker.deb  # Download specific version (optional)
#      - sudo apt-get install -y docker.deb  # Install Docker using downloaded package

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 422457112101.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
#      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=422457112101.dkr.ecr.us-east-1.amazonaws.com/cpcoludregistry
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"spring-boot","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files: imagedefinitions.json