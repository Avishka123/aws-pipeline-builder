version: 0.2


phases:
  install:
    commands:
      # Add Docker's official GPG key:
      - echo install begin
      - sudo apt-get update
      - sudo apt-get install ca-certificates curl
      - sudo install -m 0755 -d /etc/apt/keyrings
      - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      - sudo chmod a+r /etc/apt/keyrings/docker.asc

      # Add the repository to Apt sources:
      - echo hello docker
      - sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - sudo apt-get update
      - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 422457112101.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
#      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=422457112101.dkr.ecr.us-east-1.amazonaws.com/cpcoludregistry
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"spring-boot","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files: imagedefinitions.json